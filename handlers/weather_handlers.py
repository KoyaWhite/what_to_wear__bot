# handlers/weather_handlers.py
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command

from keyboards.city_keyboard import get_city_keyboard, SUPPORT_BUTTON_TEXT, OTHER_CITY_BUTTON_TEXT, CITIES
from services.weather_service import get_weather
from services.outfit_service import get_outfit_recommendation
from keyboards.donate_keyboard import donate_kb

router = Router()

# –°–æ—Å—Ç–æ—è–Ω–∏–µ: –æ–∂–∏–¥–∞–µ–º –≤–≤–æ–¥ –≥–æ—Ä–æ–¥–∞
waiting_for_city = set()


@router.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –≤–≤–µ–¥–∏ –ª—é–±–æ–π –≥–æ—Ä–æ–¥ –≤—Ä—É—á–Ω—É—é.",
        reply_markup=get_city_keyboard()
    )


@router.message(F.text == SUPPORT_BUTTON_TEXT)
async def handle_support(message: Message):
    await message.answer(
        "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –±–æ—Ç–∞! üíñ\n\n"
        "–¢–≤–æ—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–º–æ–≥–∞–µ—Ç –æ—Å—Ç–∞–≤–ª—è—Ç—å –±–æ—Ç–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å –µ–≥–æ.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–±:",
        reply_markup=donate_kb
    )


@router.message(F.text == OTHER_CITY_BUTTON_TEXT)
async def ask_for_city(message: Message):
    waiting_for_city.add(message.from_user.id)
    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ (–Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º):",
        reply_markup=None  # –≤—Ä–µ–º–µ–Ω–Ω–æ —É–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )


@router.message()
async def handle_city_selection(message: Message):
    user_id = message.from_user.id
    city = message.text.strip()

    # –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
    if city.startswith("/"):
        return

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–∂–∏–¥–∞–µ—Ç –≤–≤–æ–¥ –≥–æ—Ä–æ–¥–∞
    if user_id in waiting_for_city:
        waiting_for_city.discard(user_id)
        reply_markup = get_city_keyboard()  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    else:
        # –ï—Å–ª–∏ —ç—Ç–æ –∫–Ω–æ–ø–∫–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å
        if city in CITIES:
            reply_markup = get_city_keyboard()
        else:
            # –≠—Ç–æ —Å–≤–æ–±–æ–¥–Ω—ã–π –≤–≤–æ–¥ ‚Äî –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å—Ä–∞–∑—É
            reply_markup = get_city_keyboard()  # –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
    if city == SUPPORT_BUTTON_TEXT:
        await handle_support(message)
        return

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–≥–æ–¥—É
    temp, city_name = get_weather(city)
    if temp is None:
        await message.answer(
            f"‚ùå {city_name}\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.",
            reply_markup=reply_markup
        )
        return

    header, outfit = get_outfit_recommendation(temp)
    result = (
        f"üìç –ì–æ—Ä–æ–¥: {city_name}\n"
        f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n"
        f"{header}\n\n"
        f"üî∏ –ß—Ç–æ –Ω–∞–¥–µ—Ç—å:\n{outfit}"
    )
    await message.answer(result, reply_markup=reply_markup)