# handlers/weather_handlers.py
from aiogram import types, Router
from aiogram.filters import Command

from keyboards.city_keyboard import get_city_keyboard
from services.weather_service import get_weather
from services.outfit_service import get_outfit_recommendation

router = Router()

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –∏ —á—Ç–æ –Ω–∞–¥–µ—Ç—å:",
        reply_markup=get_city_keyboard()
    )

@router.message()
async def handle_city_selection(message: types.Message):
    city = message.text.strip()

    from keyboards.city_keyboard import CITIES
    if city not in CITIES:
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:",
            reply_markup=get_city_keyboard()
        )
        return

    await message.answer(f"üîç –ü–æ–ª—É—á–∞–µ–º –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ {city}...")

    temp, city_name = get_weather(city)
    if temp is None:
        await message.answer(f"‚ùå {city_name}")
        return

    header, outfit = get_outfit_recommendation(temp)

    result = (
        f"üìç –ì–æ—Ä–æ–¥: {city_name}\n"
        f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n"
        f"{header}\n\n"
        f"üëó –ß—Ç–æ –Ω–∞–¥–µ—Ç—å:\n{outfit}"
    )
    await message.answer(result)