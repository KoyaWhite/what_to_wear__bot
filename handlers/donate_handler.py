# handlers/donate_handler.py
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.filters import Command
from keyboards.donate_keyboard import donate_kb

router = Router()

# –ü—É—Ç—å –∫ –≤–∞—à–µ–º—É QR-–∫–æ–¥—É
QR_PATH = "assets/QR_code.jpg"


@router.message(Command("donate"))
async def cmd_donate(message: Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é QR-–∫–æ–¥ –∏ –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–æ–Ω–∞—Ç–∞"""
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏
    await message.answer(
        "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑–≤–∏—Ç–∏–µ –±–æ—Ç–∞ üíñ\n\n"
        "–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –æ—Å—Ç–∞–≤–∏—Ç—å –±–æ—Ç–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º –∏ —É–ª—É—á—à–∞—Ç—å –µ–≥–æ.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–±:",
        reply_markup=donate_kb
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º QR-–∫–æ–¥ –∫–∞–∫ —Ñ–æ—Ç–æ
    try:
        photo = FSInputFile(QR_PATH)
        await message.answer_photo(
            photo=photo,
            caption="üí≥ –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –≤ —Å–≤–æ—ë–º –±–∞–Ω–∫–µ\n"
                    "–ü–µ—Ä–µ–≤–æ–¥ –ø–æ –°–ë–ü ‚Äî –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏!"
        )
    except FileNotFoundError:
        await message.answer(
            "‚ùå QR-–∫–æ–¥ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ [–ø–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ](https://www.tinkoff.ru/rm/r_uadSYUBdzf.GfKeMjixpq/UZwqb94862)",
            parse_mode="Markdown"
        )


@router.callback_query(F.data == "download_qr")
async def download_qr(callback: CallbackQuery):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç QR-–∫–æ–¥ –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è"""
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏"
    await callback.answer()

    try:
        document = FSInputFile(QR_PATH)
        await callback.message.answer_document(
            document=document,
            caption="üìé –í–æ—Ç –≤–∞—à QR-–∫–æ–¥. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –±–∞–Ω–∫–∞."
        )
    except FileNotFoundError:
        if callback.message:
            await callback.message.answer("‚ùå –§–∞–π–ª QR-–∫–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.")
        else:
            # –ï—Å–ª–∏ message –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —á–∞—Ç —á–µ—Ä–µ–∑ bot
            bot = callback.bot
            await bot.send_message(callback.from_user.id, "‚ùå –§–∞–π–ª QR-–∫–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω.")


@router.callback_query(F.data == "back_to_menu")
async def back_to_menu(callback: CallbackQuery):
    """–ö–Ω–æ–ø–∫–∞ '–ù–∞–∑–∞–¥' ‚Äî —É–¥–∞–ª—è–µ—Ç –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    await callback.answer()  # —É–±–∏—Ä–∞–µ–º "—á–∞—Å–∏–∫–∏"

    if callback.message:
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
            await callback.message.edit_text(
                "–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –≤–≤–µ–¥–∏ –ª—é–±–æ–π –≥–æ—Ä–æ–¥ –≤—Ä—É—á–Ω—É—é.",
                reply_markup=None  # —É–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            )
        except Exception as e:
            # –ï—Å–ª–∏ –Ω–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ), –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
            await callback.message.answer("–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –≤–≤–µ–¥–∏ –ª—é–±–æ–π –≥–æ—Ä–æ–¥ –≤—Ä—É—á–Ω—É—é.")
    else:
        # –ï—Å–ª–∏ message –Ω–µ—Ç ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–∫—É —á–µ—Ä–µ–∑ bot
        await callback.bot.send_message(callback.from_user.id, "–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –≤–≤–µ–¥–∏ –ª—é–±–æ–π –≥–æ—Ä–æ–¥ –≤—Ä—É—á–Ω—É—é.")