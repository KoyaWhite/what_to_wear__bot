# services/weather_service.py
import requests
import time
from bot_instance import OPENWEATHER_API_KEY

# –ú–∞–ø–ø–∏–Ω–≥: –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è ‚Üí –ª–∞—Ç–∏–Ω–∏—Ü–∞
CITY_ALIASES = {
    "–ú–æ—Å–∫–≤–∞": "Moscow",
    "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥": "Saint Petersburg",
    "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫": "Novosibirsk",
    "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥": "Yekaterinburg",
    "–ö–∞–∑–∞–Ω—å": "Kazan",
    "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥": "Nizhny Novgorod",
    "–ß–µ–ª—è–±–∏–Ω—Å–∫": "Chelyabinsk",
    "–°–∞–º–∞—Ä–∞": "Samara",
    "–û–º—Å–∫": "Omsk",
    "–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É": "Rostov-on-Don",
    "–£—Ñ–∞": "Ufa",
    "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫": "Krasnoyarsk",
    "–í–æ—Ä–æ–Ω–µ–∂": "Voronezh",
    "–ü–µ—Ä–º—å": "Perm",
    "–í–æ–ª–≥–æ–≥—Ä–∞–¥": "Volgograd",
    "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä": "Krasnodar"
}

# –ö—ç—à: {–≥–æ—Ä–æ–¥: (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, city_name, timestamp)}
WEATHER_CACHE = {}
CACHE_TTL = 1200  # 30 –º–∏–Ω—É—Ç (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)

def get_weather(city: str):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–≥–æ–¥—É –∏–∑ –∫—ç—à–∞ (–µ—Å–ª–∏ –∞–∫—Ç—É–∞–ª—å–Ω–∞) –∏–ª–∏ –∏–∑ API.
    :param city: –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
    :return: (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞) –∏–ª–∏ (None, —Å–æ–æ–±—â–µ–Ω–∏–µ_–æ–±_–æ—à–∏–±–∫–µ)
    """
    city = city.strip()
    if not city:
        return None, "–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º."

    current_time = time.time()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    if city in WEATHER_CACHE:
        temp, city_name, timestamp = WEATHER_CACHE[city]
        if current_time - timestamp < CACHE_TTL:
            print(f"[CACHE] –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à –¥–ª—è {city}: {temp}¬∞C")
            return temp, city_name
        else:
            print(f"[CACHE] –ö—ç—à —É—Å—Ç–∞—Ä–µ–ª –¥–ª—è {city}, –æ–±–Ω–æ–≤–ª—è–µ–º...")
            del WEATHER_CACHE[city]

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –ª–∞—Ç–∏–Ω–∏—Ü—É, –µ—Å–ª–∏ –µ—Å—Ç—å –∞–ª–∏–∞—Å
    city_for_api = CITY_ALIASES.get(city, city)

    # –®–∞–≥ 1: –ì–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
    geo_url = "http://api.openweathermap.org/geo/1.0/direct"
    geo_params = {
        "q": city_for_api,
        "limit": 1,
        "appid": OPENWEATHER_API_KEY
    }

    try:
        geo_response = requests.get(geo_url, params=geo_params, timeout=10)
        print(f"[DEBUG] –ì–µ–æ–∑–∞–ø—Ä–æ—Å: {geo_url}?q={city_for_api} ‚Üí —Å—Ç–∞—Ç—É—Å: {geo_response.status_code}")

        if geo_response.status_code == 200:
            data = geo_response.json()
            if not data:
                print(f"[ERROR] –ì–æ—Ä–æ–¥ '{city_for_api}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ OpenWeatherMap.")
                return None, "‚ùå –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."

            location = data[0]
            country = location.get("country")

            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ª—é–±—ã–µ –≥–æ—Ä–æ–¥–∞
            print(f"[INFO] –ì–æ—Ä–æ–¥ –Ω–∞–π–¥–µ–Ω: {location['name']} ({country})")

            lat = location["lat"]
            lon = location["lon"]
            city_name = location.get("local_names", {}).get("ru", location["name"])

            # –®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã
            weather_url = "https://api.openweathermap.org/data/2.5/weather"
            weather_params = {
                "lat": lat,
                "lon": lon,
                "appid": OPENWEATHER_API_KEY,
                "units": "metric",
                "lang": "ru"
            }

            weather_response = requests.get(weather_url, params=weather_params, timeout=10)
            print(f"[DEBUG] –ó–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã: {weather_url}?lat={lat}&lon={lon} ‚Üí —Å—Ç–∞—Ç—É—Å: {weather_response.status_code}")

            if weather_response.status_code == 200:
                temp = round(weather_response.json()["main"]["temp"])
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
                WEATHER_CACHE[city] = (temp, city_name, current_time)
                print(f"[CACHE] –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –∫—ç—à: {city} ‚Üí {temp}¬∞C")
                return temp, city_name

            elif weather_response.status_code == 401:
                print("[CRITICAL] –û—à–∏–±–∫–∞ 401: –ù–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –Ω–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–π API-–∫–ª—é—á.")
                return None, "üîê –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª—é—á API."

            elif weather_response.status_code == 404:
                print(f"[ERROR] –ü–æ–≥–æ–¥–∞ –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç {lat},{lon} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
                return None, "‚òÅÔ∏è –î–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã."

            elif weather_response.status_code == 429:
                print("[ERROR] –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ OpenWeatherMap (429).")
                return None, "‚è≥ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç—É."

            else:
                print(f"[ERROR] –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –∫–æ–¥ –ø–æ–≥–æ–¥—ã: {weather_response.status_code}, —Ç–µ–ª–æ: {weather_response.text}")
                return None, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã."

        elif geo_response.status_code == 401:
            print("[CRITICAL] –û—à–∏–±–∫–∞ 401 –ø—Ä–∏ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–∏ ‚Äî –ø—Ä–æ–≤–µ—Ä—å—Ç–µ OPENWEATHER_API_KEY.")
            return None, "üîê –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API-–∫–ª—é—á –≤–µ—Ä–Ω—ã–π –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω."

        elif geo_response.status_code == 429:
            print("[ERROR] –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –≥–µ–æ–∫–æ–¥–µ—Ä—É (429).")
            return None, "‚è≥ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º."

        else:
            print(f"[ERROR] –û—à–∏–±–∫–∞ –≥–µ–æ–∫–æ–¥–µ—Ä–∞: {geo_response.status_code}, –æ—Ç–≤–µ—Ç: {geo_response.text}")
            return None, "üåê –°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."

    except requests.exceptions.Timeout:
        print("[ERROR] –ó–∞–ø—Ä–æ—Å –∫ API –ø—Ä–µ–≤—ã—Å–∏–ª –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è (timeout).")
        return None, "‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    except requests.exceptions.ConnectionError:
        print("[ERROR] –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.")
        return None, "üåê –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É."

    except Exception as e:
        print(f"[CRITICAL] –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {type(e).__name__}: {e}")
        return None, "üö® –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞."
